name: gradle test

on:
  # any pull request
  pull_request:
  # any push to master
  push:
    branches:
      - master
  workflow_dispatch:
jobs:
  # this test is a heavily modified version of the official gradle test
  # so that it runs each test in parallel and then aggregates the results
  # all in github actions
  get-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 # checkout the repo
      - name: Set up JDK 11 # set up java 11
        uses: actions/setup-java@v3 # use the setup-java action
        with:
          java-version: '11' # we want java 11
          distribution: 'temurin' # we want temurin because frc uses it
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew # make gradlew executable
      - name: Get tests
        run: ./gradlew getTests # run the getTests task which should generate a file called tests.txt
      - name: Upload tests
        # upload the tests.txt file as an artifact (which is a file that can be downloaded)
        uses: actions/upload-artifact@v3
        with:
          name: tests # name the artifact tests
          path: tests.txt # upload the tests.txt file
      # we also neet to output the file so that the next job can use it
      - name: Set output matrix # set the output matrix
        id: setTests # set the id to output
        run: echo "::set-output name=tests::$(cat tests.txt)"

  test:
    needs: get-tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test: ${{ fromJson(needs.get-tests.outputs.tests) }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run tests
        run: ./gradlew test --tests ${{ matrix.test }}

permissions:
  contents: read
